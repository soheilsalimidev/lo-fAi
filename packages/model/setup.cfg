# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = model
description = Add a short description here!
author = Soheil Salimi
author_email = soheilsalimidev@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/pyscaffold/pyscaffold/
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    _libgcc_mutex=0.1=conda_forge
    _openmp_mutex=4.5=2_gnu
    aiosignal=1.3.1=pypi_0
    annotated-types=0.6.0=py310h06a4308_0
    appdirs=1.4.4=pyhd3eb1b0_0
    attrs=23.2.0=pypi_0
    blas=1.0=mkl
    brotli-python=1.0.9=py310h6a678d5_7
    bzip2=1.0.8=h5eee18b_5
    ca-certificates=2024.3.11=h06a4308_0
    certifi=2024.2.2=py310h06a4308_0
    charset-normalizer=2.0.4=pyhd3eb1b0_0
    click=8.1.7=py310h06a4308_0
    contourpy=1.2.1=pypi_0
    cpuonly=2.0=0
    cycler=0.12.1=pypi_0
    deepspeed=0.14.0=cpu_py310h11dbdba_0
    docker-pycreds=0.4.0=pyhd3eb1b0_0
    expat=2.5.0=h6a678d5_0
    ffmpeg=4.3=hf484d3e_0
    filelock=3.13.1=py310h06a4308_0
    fonttools=4.51.0=pypi_0
    freetype=2.12.1=h4a9f257_0
    frozenlist=1.4.1=pypi_0
    fsspec=2023.10.0=py310h06a4308_0
    ftfy=6.1.3=pypi_0
    gitdb=4.0.7=pyhd3eb1b0_0
    gitpython=3.1.37=py310h06a4308_0
    gmp=6.2.1=h295c915_3
    gmpy2=2.1.2=py310heeb90bb_0
    gnutls=3.6.15=he1e5248_0
    hjson-py=3.1.0=pyhd8ed1ab_0
    huggingface-hub=0.22.2=pypi_0
    idna=3.4=py310h06a4308_0
    intel-openmp=2023.1.0=hdb19cb5_46306
    jinja2=3.1.3=py310h06a4308_0
    jpeg=9e=h5eee18b_1
    jsonlines=4.0.0=pypi_0
    jsonschema=4.21.1=pypi_0
    jsonschema-specifications=2023.12.1=pypi_0
    kiwisolver=1.4.5=pypi_0
    lame=3.100=h7b6447c_0
    lcms2=2.12=h3be6417_0
    ld_impl_linux-64=2.38=h1181459_1
    lerc=3.0=h295c915_0
    libaio=0.3.113=h5eee18b_0
    libdeflate=1.17=h5eee18b_1
    libffi=3.4.4=h6a678d5_0
    libgcc-ng=13.2.0=h807b86a_5
    libgomp=13.2.0=h807b86a_5
    libiconv=1.16=h7f8727e_2
    libidn2=2.3.4=h5eee18b_0
    libjpeg-turbo=2.0.0=h9bf148f_0
    libpng=1.6.39=h5eee18b_0
    libprotobuf=3.20.3=he621ea3_0
    libstdcxx-ng=13.2.0=h7e041cc_5
    libtasn1=4.19.0=h5eee18b_0
    libtiff=4.5.1=h6a678d5_0
    libunistring=0.9.10=h27cfd23_0
    libuuid=1.41.5=h5eee18b_0
    libwebp-base=1.3.2=h5eee18b_0
    lightning-utilities=0.9.0=py310h06a4308_0
    llvm-openmp=14.0.6=h9e868ea_0
    lm-dataformat=0.0.20=pypi_0
    loguru=0.7.2=pypi_0
    lz4-c=1.9.4=h6a678d5_0
    markupsafe=2.1.3=py310h5eee18b_0
    matplotlib=3.8.4=pypi_0
    miditok=3.0.2=pypi_0
    miditoolkit=1.0.1=pypi_0
    mido=1.3.2=pypi_0
    mkl=2023.1.0=h213fc3f_46344
    mkl-service=2.4.0=py310h5eee18b_1
    mkl_fft=1.3.8=py310h5eee18b_0
    mkl_random=1.2.4=py310hdb19cb5_0
    mpc=1.1.0=h10f8cd9_1
    mpfr=4.0.2=hb69a4c5_1
    mpmath=1.3.0=py310h06a4308_0
    msgpack=1.0.8=pypi_0
    ncurses=6.4=h6a678d5_0
    nettle=3.7.3=hbbd107a_1
    networkx=3.1=py310h06a4308_0
    ninja=1.10.2=h06a4308_5
    ninja-base=1.10.2=hd09550d_5
    numpy=1.24.4=pypi_0
    openh264=2.1.1=h4ff587b_0
    openjpeg=2.4.0=h3ad879b_0
    openssl=3.0.13=h7f8727e_0
    packaging=23.2=py310h06a4308_0
    pathtools=0.1.2=pyhd3eb1b0_1
    pillow=10.3.0=pypi_0
    pip=23.3.1=py310h06a4308_0
    platformdirs=4.2.0=pypi_0
    protobuf=3.20.3=py310h6a678d5_0
    psutil=5.9.0=py310h5eee18b_0
    py-cpuinfo=9.0.0=py310h06a4308_0
    pydantic=2.5.3=py310h06a4308_0
    pydantic-core=2.14.6=py310hb02cf49_0
    pynvml=11.5.0=pyhd8ed1ab_0
    pyparsing=3.1.2=pypi_0
    pysmartdl=1.3.4=pypi_0
    pysocks=1.7.1=py310h06a4308_0
    python=3.10.14=h955ad1f_0
    python-dateutil=2.9.0.post0=pypi_0
    python_abi=3.10=2_cp310
    pytorch=2.2.2=py3.10_cpu_0
    pytorch-lightning=1.9.5=py310h06a4308_0
    pytorch-mutex=1.0=cpu
    pyyaml=6.0.1=py310h5eee18b_0
    ray=2.11.0=pypi_0
    readline=8.2=h5eee18b_0
    referencing=0.34.0=pypi_0
    regex=2024.4.16=pypi_0
    requests=2.31.0=py310h06a4308_1
    rpds-py=0.18.0=pypi_0
    safetensors=0.4.3=pypi_0
    sentry-sdk=1.9.0=py310h06a4308_0
    setproctitle=1.2.2=py310h7f8727e_0
    setuptools=68.2.2=py310h06a4308_0
    six=1.16.0=pyhd3eb1b0_1
    smmap=4.0.0=pyhd3eb1b0_0
    sqlite=3.41.2=h5eee18b_0
    sympy=1.12=py310h06a4308_0
    symusic=0.4.5=pypi_0
    tbb=2021.8.0=hdb19cb5_0
    tk=8.6.12=h1ccaba5_0
    tokenizers=0.19.0=pypi_0
    torchaudio=2.2.2=py310_cpu
    torchmetrics=1.1.2=py310h06a4308_0
    torchvision=0.15.2=cpu_py310h83e0c9b_0
    tqdm=4.65.0=py310h2f386ee_0
    transformers=4.40.1=pypi_0
    typing-extensions=4.9.0=py310h06a4308_1
    typing_extensions=4.9.0=py310h06a4308_1
    tzdata=2024a=h04d1e81_0
    ujson=5.9.0=pypi_0
    urllib3=2.1.0=py310h06a4308_1
    wandb=0.16.5=pyhd8ed1ab_0
    wcwidth=0.2.13=pypi_0
    wheel=0.41.2=py310h06a4308_0
    xz=5.4.6=h5eee18b_0
    yaml=0.2.5=h7b6447c_0
    zlib=1.2.13=h5eee18b_0
    zstandard=0.22.0=pypi_0
    zstd=1.5.5=hc292b87_0


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install model[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = model.module:function
# For example:
# console_scripts =
#     fibonacci = model.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov model --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = model
extensions =
    no_tox
